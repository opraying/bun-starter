name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/cache@v4
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-${{ matrix.bun }}-bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.bun }}-bun-

    - name: Use Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Lint
      run: bun run lint

    - name: Type check
      run: bun run typecheck

    - name: Build
      run: bun run build

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
        file: ./Dockerfile

    - name: Delete old latest image
      run: |
        REPO="${{ github.repository_owner }}/${{ github.event.repository.name }}"
        TOKEN="${{ secrets.GITHUB_TOKEN }}"
        LATEST_DIGEST=$(curl -s -H "Authorization: Bearer $TOKEN" \
          "https://api.github.com/user/packages/container/$REPO/versions" | \
          jq -r '.[] | select(.metadata.container.tags[] | contains("latest")) | .id')
        if [ ! -z "$LATEST_DIGEST" ]; then
          curl -X DELETE -H "Authorization: Bearer $TOKEN" \
            "https://api.github.com/user/packages/container/$REPO/versions/$LATEST_DIGEST"
          echo "Deleted old latest image with digest: $LATEST_DIGEST"
        else
          echo "No old latest image found to delete"
        fi